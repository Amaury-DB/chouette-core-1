options:
  size: 2x

definitions:
  services:
    docker:
      memory: 7128
    postgres:
      image:
        name: us.gcr.io/enroute-interne/enroute-postgresql:14-dev
        username: _json_key
        password: "$GCLOUD_API_KEYFILE"
      environment:
        POSTGRES_DB: chouette
        POSTGRES_USER: chouette
        POSTGRES_PASSWORD: chouette
      memory: 2048
  caches:
    bundler: ./vendor/bundle
    yarn: ./node_modules
    assets: ./public/assets
    assets-cache: ./tmp/cache/assets
    build-cache: ./cache
    codacy-coverage: ./.codacy-coverage
  steps:
    - step: &unit-tests
        name: Unit tests
        image:
          name: us.gcr.io/enroute-interne/enroute-ruby:2.7-dev
          username: _json_key
          password: "$GCLOUD_API_KEYFILE"
        caches:
          - bundler
          - yarn
          - assets
          - assets-cache
          - build-cache
          - codacy-coverage
        script:
          - eval "$(build.sh bitbucket::env)"
          - build.sh ci::setup
          - bundle exec rake ci
        services:
          - postgres

pipelines:
  custom:
    gems-update: # Merge ci-master from chouette-core
      - step:
          name: Update gems
          image:
            name: us.gcr.io/enroute-interne/enroute-ruby:2.7-dev
            username: _json_key
            password: "$GCLOUD_API_KEYFILE"
          caches:
            - bundler
            - yarn
            - assets
            - assets-cache
            - build-cache
          script:
            - eval "$(build.sh bitbucket::env)"
            - build.sh ci::setup
            - build.sh bummr::pull-request
          services:
            - postgres

  default:
    - step: *unit-tests

  branches:
    master:
      - parallel:
        - step: *unit-tests
        - step:
            name: Build Docker
            image:
              name: us.gcr.io/enroute-interne/enroute-cloud-sdk:latest
              username: _json_key
              password: "$GCLOUD_API_KEYFILE"
            caches:
              - docker
            script:
              - build.sh gcloud::setup
              - build.sh bitbucket::docker::build
            services:
              - docker
      - step:
          name: Tag
          script:
            - export TAG_NAME=ci-master
            - git tag -afm "Build ${BITBUCKET_BUILD_NUMBER}" $TAG_NAME
            - git push origin :refs/tags/$TAG_NAME
            - git push origin $TAG_NAME
      - step:
          name: Trigger sub-projects
          script:
            - pipe: atlassian/trigger-pipeline:5.0.1
              variables:
                BITBUCKET_USERNAME: $BITBUCKET_USERNAME
                BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
                REPOSITORY: $TRIGGER_REPOSITORY_1
                CUSTOM_PIPELINE_NAME: "merge"
            - pipe: atlassian/trigger-pipeline:5.0.1
              variables:
                BITBUCKET_USERNAME: $BITBUCKET_USERNAME
                BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
                REPOSITORY: $TRIGGER_REPOSITORY_2
                CUSTOM_PIPELINE_NAME: "merge"
      - step:
          name: Deploy to test
          image:
              name: us.gcr.io/enroute-interne/enroute-cloud-sdk:latest
              username: _json_key
              password: "$GCLOUD_API_KEYFILE"
          deployment: test
          script:
            - git clone git@bitbucket.org:enroute-mobi/chouette-env.git env
            - env/deploy.sh
            - pipe: atlassian/datadog-send-event:1.1.3
              variables:
                API_KEY: $DATADOG_KEY
                TITLE: "Build ${BITBUCKET_BUILD_NUMBER} deployed on ${BITBUCKET_REPO_SLUG} ${BITBUCKET_DEPLOYMENT_ENVIRONMENT}"
      - step:
          name: Trigger User Tests
          script:
            - pipe: atlassian/trigger-pipeline:5.0.1
              variables:
                BITBUCKET_USERNAME: $BITBUCKET_USERNAME
                BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
                REPOSITORY: $TRIGGER_REPOSITORY_3
