options:
  docker: true

pipelines:
  default:
    - step:
        name: Unit tests
        image: ruby:2.6.0
        script:
          - echo TODO
  branches:
    master:
      - step:
          name: Unit tests
          image: ruby:2.6.0
          script:
            - echo TODO
      - step:
          name: Build Docker
          image: google/cloud-sdk:latest
          caches:
            - docker
          script:
            - export IMAGE_NAME=eu.gcr.io/$GCLOUD_PROJECT/$BITBUCKET_REPO_SLUG:$BITBUCKET_COMMIT
            - echo $GCLOUD_API_KEYFILE | base64 -d > ~/.gcloud-api-key.json
            - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
            - gcloud config set project $GCLOUD_PROJECT
            - gcloud auth configure-docker --quiet
            # BUILD IMAGE
            - docker build . -t $IMAGE_NAME
            # PUBLISH IMAGE
            - docker push $IMAGE_NAME
      - step:
          name: Deploy to test
          image: google/cloud-sdk:latest
          caches:
            - docker
          deployment: test
          trigger: manual
          script:
            # Tag image in registry with test label
            - export IMAGE_NAME=eu.gcr.io/$GCLOUD_PROJECT/$BITBUCKET_REPO_SLUG:$BITBUCKET_COMMIT
            - export TAGGED_IMAGE_NAME=eu.gcr.io/$GCLOUD_PROJECT/$BITBUCKET_REPO_SLUG:test
            - echo $GCLOUD_API_KEYFILE | base64 -d > ~/.gcloud-api-key.json
            - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
            - gcloud config set project $GCLOUD_PROJECT
            - gcloud auth configure-docker --quiet
            - docker pull $IMAGE_NAME
            - docker tag $IMAGE_NAME $TAGGED_IMAGE_NAME
            - docker push $TAGGED_IMAGE_NAME

definitions:
  services:
    docker:
      memory: 2048
