- breadcrumb :notification_rules, @workbench

.page_content
  .container-fluid
    .row
      .col-lg-12
        = render 'filters'

    - if @notification_rules.any?
      .row
        .col-lg-12
          = table_builder_2 @notification_rules,
            [ \
              TableBuilderHelper::Column.new( \
                key: :notification_type, \
                attribute: Proc.new {|o| "enumerize.notification_rule.notification_type.#{o.notification_type}".t}, \
                sortable: false \
              ),
              TableBuilderHelper::Column.new( \
                key: :priority, \
                attribute: :priority, \
                sortable: true \
              ),
              TableBuilderHelper::Column.new( \
                key: :rule_type, \
                attribute: Proc.new {|o| "enumerize.notification_rule.rule_type.#{o.rule_type}".t}, \
                sortable: true \
              ),
              TableBuilderHelper::Column.new( \
                key: :operation_statuses, \
                attribute: :display_operation_statuses, \
                sortable: true \
              ),
              TableBuilderHelper::Column.new( \
                key: :period, \
                if: Proc.new { |o| !!o.period }, \
                attribute: Proc.new {|o| t('bounding_dates', debut: l(o.period.begin), end: l(o.period.end))}, \
                link_to: Proc.new {|o| [o.workbench, o]}, \
                sortable: false, \
              ), \
              TableBuilderHelper::Column.new( \
                key: :line_ids, \
                attribute: Proc.new {|n| n.lines.map(&:name).join(",") }, \
                sortable: false, \
              ), \
            ],
            links: [:show],
            cls: 'table has-search'

          = new_pagination @notification_rules, 'pull-right'

    - unless @notification_rules.any?
      .row.mt-xs
        .col-lg-12
          = replacement_msg t('notification_rules.search_no_results')
