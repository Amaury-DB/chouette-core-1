.container-fluid
	- if @documents.any?
		.row
			.col-lg-12
				= table_builder_2 @documents,
					[ \
						TableBuilderHelper::Column.new( \
							key: :uuid, \
							attribute: :uuid, \
							sortable: false, \
						), \
						TableBuilderHelper::Column.new( \
							key: :name, \
							attribute: :name, \
							sortable: false, \
							link_to: -> (doc) { workbench_document_path(@workbench, doc) } \
						), \
						TableBuilderHelper::Column.new( \
							key: :document_type_id, \
							attribute: -> (doc) { doc.document_type.short_name }, \
							sortable: false, \
							link_to: -> (doc) { workgroup_document_type_path(@workbench.workgroup, doc.document_type) } \
						), \
						TableBuilderHelper::Column.new( \
							key: :from, \
							attribute: -> (doc) { doc.validity_period.from.present? ? l(doc.validity_period.from) : '-' }, \
							sortable: false,\
						), \
						TableBuilderHelper::Column.new( \
							key: :to, \
							attribute: -> (doc) { doc.validity_period.to.present? ? l(doc.validity_period.to) : '-' }, \
							sortable: false,\
						) \
					].compact,
					cls: 'table'

				= new_pagination @documents, 'pull-right', renderer: WillPaginate::RemoteLinkRenderer

	- else
		.row.mt-xs
			.col-lg-12
				= replacement_msg t('documents.search_no_results')

	h2 = I18n.t('lines.actions.associate_other_documents')
	.row
		= simple_form_for @unassociated_documents_search, url: request.path, method: "GET", remote: true, html: { class: 'form form-filter' }  do |f|
			.ffg-row
				.input-group.search_bar
					= f.input :name, label: false, class: 'form-control'
					span.input-group-btn
						button.btn.btn-default#search_btn type='submit'
							span.fa.fa-search
			.actions
				= link_to t('actions.erase'), request.path, class: 'btn btn-link', remote: true
				= f.submit t('actions.filter'), class: 'btn btn-default'

	- if @unassociated_documents.any?
		.col-lg-12
			= table_builder_2 @unassociated_documents,
				[ \
					TableBuilderHelper::Column.new( \
						key: :uuid, \
						attribute: :uuid, \
						sortable: false, \
					), \
					TableBuilderHelper::Column.new( \
						key: :name, \
						attribute: :name, \
						sortable: false, \
						link_to: -> (doc) { workbench_document_path(@workbench, doc) } \
					), \
					TableBuilderHelper::Column.new( \
						key: :document_type_id, \
						attribute: -> (doc) { doc.document_type.short_name }, \
						sortable: false, \
						link_to: -> (doc) { workgroup_document_type_path(@workbench.workgroup, doc.document_type) } \
					), \
					TableBuilderHelper::Column.new( \
						key: :from, \
						attribute: -> (doc) { doc.validity_period.from.present? ? l(doc.validity_period.from) : '-' }, \
						sortable: false,\
					), \
					TableBuilderHelper::Column.new( \
						key: :to, \
						attribute: -> (doc) { doc.validity_period.to.present? ? l(doc.validity_period.to) : '-' }, \
						sortable: false,\
					) \
				].compact,
				cls: 'table has-filter has-search'
			= new_pagination @unassociated_documents, 'pull-right', renderer: WillPaginate::RemoteLinkRenderer

	- else
		.row.mt-xs
			.col-lg-12
				= replacement_msg t('documents.search_no_results')
