/ PageHeader
= pageheader 'map-marker',
             @line.name,
             'Lorem ipsum dolor sit amet',
             t('last_update', time: l(@line.updated_at, format: :short)) do

  / Below is secundary actions & optional contents
  .row
    .col-lg-12.text-right.mb-sm
      = link_to t('lines.actions.show_network'), [@line_referential, @line.network], class: 'btn btn-primary'
      = link_to t('lines.actions.show_company'), [@line_referential, @line.company], class: 'btn btn-primary'

      - if policy(Chouette::Line).create? && @line_referential.organisations.include?(current_organisation)
        = link_to t('lines.actions.new'), new_line_referential_line_path(@line_referential), class: 'btn btn-primary'
      - if false && policy(@line).update?
        = link_to t('lines.actions.edit'), edit_line_referential_line_path(@line_referential, @line), class: 'btn btn-primary'
      - if policy(@line).destroy?
        = link_to line_referential_line_path(@line_referential, @line), method: :delete, data: {confirm:  t('lines.actions.destroy_confirm')}, class: 'btn btn-primary' do
          span.fa.fa-trash
          span = t('lines.actions.destroy')

/ PageContent
.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t('metadatas'),
          {  'ID Codif' => @line.objectid.local_id,
             'ActivÃ©' => (@line.deactivated? ? t('false') : t('true')),
             @line.human_attribute_name(:network) => (@line.network.nil? ? t('lines.index.unset') : @line.network.name),
             @line.human_attribute_name(:company) => (@line.company.nil? ? t('lines.index.unset') : @line.company.name),
             'Transporteur(s) secondaire(s)' => (@line.secondary_companies.nil? ? t('lines.index.unset') : @line.secondary_companies.collect(&:name).join(', ')),
             'Nom court' => @line.number,
             'Code public' => (@line.registration_number ? @line.registration_number : '-'),
             @line.human_attribute_name(:transport_mode) => (@line.transport_mode ? t("enumerize.line.transport_mode.#{@line.transport_mode}") : '-'),
             @line.human_attribute_name(:transport_submode) => (@line.transport_submode ? t("enumerize.line.transport_submode.#{@line.transport_submode}") : '-'),
             @line.human_attribute_name(:url) => (@line.url ? @line.url : '-') }
