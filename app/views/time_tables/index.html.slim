/ PageHeader
= pageheader 'map-marker',
             t('time_tables.index.title'),
             '',
             ((policy(Chouette::TimeTable).create? && @referential.organisation == current_organisation) ? link_to(t('actions.add'), new_referential_time_table_path(@referential), class: 'btn btn-default') : '')

/ PageContent
.page_content
  .container-fluid
    .row
      .col-lg-12
        = search_form_for @q, url: referential_time_tables_path(@referential), html: { method: :get, class: 'form form-filter' } do |f|
          .ffg-row
            .input-group.search_bar
              = f.text_field :comment_cont, :placeholder => "#{t('.comment')}", class: 'form-control'
              span.input-group-btn
                button.btn.btn-default type='submit'
                  span.fa.fa-search

          .ffg-row
            .form-group
              = f.label @time_tables.human_attribute_name(:tag_search), required: false, class: 'control-label'
              = f.input :tag_search, as: :tags, collection: Chouette::TimeTable.tags_on(:tags).pluck(:name), label: false, input_html: { 'data-select2ed': 'true', 'data-select2ed-placeholder': 'Indiquez une étiquette...' }, wrapper_html: { class: 'select2ed'}, include_blank: false

            / .form-group.togglable
            /   = f.label @time_tables.human_attribute_name(:bounding_dates), required: false, class: 'control-label'
            /   .filter_menu
            /     = f.input :start_date_gteq, as: :date, label: t('simple_form.from'), wrapper_html: { class: 'date filter_menu-item' }
            /     = f.input :end_date_lteq, as: :date, label: t('simple_form.to'), wrapper_html: { class: 'date filter_menu-item' }


          .actions
            = link_to 'Effacer', @workbench, class: 'btn btn-link'
            = f.submit 'Filtrer', class: 'btn btn-default'

    - if @time_tables.any?
      .row
        .col-lg-12
          = table_builder @time_tables,
            { :comment => 'comment', :color => Proc.new{|tt| tt.color ? content_tag(:span, '', class: 'fa fa-circle', style: "color:#{tt.color}") : '-' },
              "Période de validité englobante" => Proc.new{ |tt| tt.bounding_dates.empty? ? '-' : t('bounding_dates', debut: l(tt.bounding_dates.min), end: l(tt.bounding_dates.max)) }, :calendar => Proc.new{ |tt| tt.calendar ? tt.calendar.try(:name) : '-' }, :updated_at => Proc.new {|tt| l(tt.updated_at, format: :short)} },
            [:show, :edit, :duplicate, :delete],
            [],
            'table has-search'

          = new_pagination @time_tables, 'pull-right'
          
    - unless @time_tables.any?
      .row.mt-xs
        .col-lg-12
          = replacement_msg t('time_tables.search_no_results')
