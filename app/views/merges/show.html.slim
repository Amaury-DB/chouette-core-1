- breadcrumb :merge, @merge
- page_header_content_for @merge

.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t('metadatas'), merge_metadatas(@merge)
      = processing_helper(@merge)
    .row
      - if @merge.referentials.any?
        .col-lg-12
          = table_builder_2 @merge.referentials,
            [ \
              TableBuilderHelper::Column.new( \
                name: t('.table_headers.referentials'),
                attribute: lambda do |referential| \
                  link_to(decorate_referential_name(referential), workbench_referential_path(@workbench, referential)) \
                end,
                sortable: false,
              ),
              TableBuilderHelper::Column.new( \
                name: t('.table_headers.workbench_macro_list_run'),
                attribute: lambda do |referential| \
                  workbench_macro_list_run = @referential_processings[referential.id]['workbench_macro_list_run']; \
                  link_to_if_table(workbench_macro_list_run.present?, operation_status(workbench_macro_list_run&.user_status, verbose: true), [@workbench, workbench_macro_list_run]) \
                end,
                sortable: false,
              ),
              TableBuilderHelper::Column.new( \
                name: t('.table_headers.workbench_control_list_run'),
                attribute: lambda do |referential| \
                  workbench_control_list_run = @referential_processings[referential.id]['workbench_control_list_run']; \
                  link_to_if_table(workbench_control_list_run.present?, operation_status(workbench_control_list_run&.user_status, verbose: true), [@workbench, workbench_control_list_run]) \
                end,
                sortable: false,
              ),
              TableBuilderHelper::Column.new( \
                name: t('.table_headers.workgroup_control_list_run'),
                attribute: lambda do |referential| \
                  workgroup_control_list_run = @referential_processings[referential.id]['workgroup_control_list_run']; \
                  link_to_if_table(workgroup_control_list_run.present?, operation_status(workgroup_control_list_run&.user_status, verbose: true), [@workbench, workgroup_control_list_run]) \
                end,
                sortable: false,
              ),
            ],
            cls: 'table'

        - if @merge.new.present?    
          .col-lg-12
            = table_builder_2 [@merge.new],
              [ \
                TableBuilderHelper::Column.new( \
                  name: t('.table_headers.merged_referential'),
                  attribute: lambda do |referential| \
                    link_to(decorate_referential_name(referential), workbench_referential_path(@workbench, referential)) \
                  end,
                  sortable: false,
                ),
                TableBuilderHelper::Column.new( \
                  name: t('.table_headers.workbench_control_list_run'),
                  attribute: lambda do |referential| \
                    workbench_control_list_run = @referential_processings[referential.id]['workbench_control_list_run']; \
                    link_to_if_table(workbench_control_list_run.present?, operation_status(workbench_control_list_run&.user_status, verbose: true), [@workbench, workbench_control_list_run]) \
                  end,
                  sortable: false,
                ),
                TableBuilderHelper::Column.new( \
                  name: t('.table_headers.workgroup_control_list_run'),
                  attribute: lambda do |referential| \
                    workgroup_control_list_run = @referential_processings[referential.id]['workgroup_control_list_run']; \                    
                    link_to_if_table(workgroup_control_list_run.present?, operation_status(workgroup_control_list_run&.user_status, verbose: true), [@workbench, workgroup_control_list_run]) \                  
                  end,
                  sortable: false,
                ),
              ],
              model: Referential, cls: 'table'
 
