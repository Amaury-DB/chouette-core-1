- javascript_additional_packs 'processing_rules/form'

- byebug
= simple_form_for [@workbench, @processing_rule], html: { class: 'form-horizontal', id: 'processing_rule_form', 'x-data': "processingRuleForm(#{@processing_rule.alpine_state})" }, wrapper: :horizontal_form  do |f|
  .row
    .col-lg-12
			.flex.items-baseline.justify-center
				= f.label I18n.t('activerecord.attributes.processing_rule.processable_type'), class: 'col-sm-4 col-xs-5 control-label mb-3'
				= f.input :processable_type,
					as: :radio_buttons,
					required: true,
					input_html: { 'x-model': 'processableType', class: 'mx-2' },
					wrapper_html: { class: 'col-sm-8 col-xs-7 flex items-baseline mr-4' },
					label: false,
					label_method: lambda { |l| "<span class='mx-2'>#{l.first}</span>".html_safe },
					checked: @processing_rule.processable_type
			
			= f.input :processable_id, as: :select, collection: []
			= f.input :workgroup_rule, as: :hidden

			- if @processing_rule.workgroup_rule
				div
					= f.input :target_workbenches,
					as: :tom_select,
					required: true,
					collection: @processing_rule.target_workbench_ids_options,
					input_html: { multiple: true },
					selected: @processing_rule.target_workbench_ids

			= f.input :operation_step, as: :select

  = cancel_button
  = f.button :submit, t('actions.submit'), class: 'btn btn-default formSubmitr', form: 'processing_rule_form'
