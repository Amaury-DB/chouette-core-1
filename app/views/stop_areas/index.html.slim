= title_tag t('stop_areas.index.title')

#country_codes
  = @country_codes.to_json

= search_form_for @q, url: stop_area_referential_stop_areas_path(@stop_area_referential), remote: true, html: { method: :get, class: "form", id: "search", role: "form"} do |f|
  .well.well-sm
    .input-group
      = f.text_field :name_or_objectid_cont, placeholder: t('.name_or_objectid'), class: 'form-control'

      .input-group-btn
        button.btn.btn-primary type="submit"
          span.fa.fa-search

= search_form_for @q, url: stop_area_referential_stop_areas_path(@stop_area_referential), remote: true, html: { method: :get, class: "form", id: "search", role: "form"} do |f|
  .well.well-sm
    .row
      .col-md-10.col-sm-9
        .row
          .col-md-3.col-sm-3
            = f.text_field :zip_code_cont, placeholder: "#{t('.zip_code')}", class: 'form-control typeahead'
          .col-md-5.col-sm-5
            = f.select(:area_type_cont, options_from_collection_for_select(Chouette::StopArea.stop_area_types, 'name', Proc.new { |stop_area_type| t("area_types.label.#{stop_area_type}") } ), { include_blank: t('.area_type') }, { class: 'form-control' })
            
      .col-md-2.col-sm-3
        button.btn.btn-primary.btn-block type="submit" Filtrer

#stop_areas
  = render 'stop_areas'

- content_for :sidebar do
  ul.actions
    - if policy(Chouette::StopArea).create?
      li = link_to t('stop_areas.actions.new'), new_stop_area_referential_stop_area_path(@stop_area_referential), class: 'add'

      / = link_to t('stop_areas.actions.default_geometry'), default_geometry_referential_stop_areas_path(@stop_area_referential), :method => :put, :class => "calculator"
