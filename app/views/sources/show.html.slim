- breadcrumb :source, @workbench, @source
- page_header_content_for @source

/ PageContent
.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = simple_block_for @source, title: t('sources.form.sections.identification') do |d|
          = d.attribute :name
          = d.attribute :url, link: @source.url
          = d.attribute :downloader_type, as: :enumerize

      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = simple_block_for @source, title: t('sources.form.sections.import_options') do |d|
          = d.attribute :import_option_automatic_merge, as: :boolean
          = d.attribute :import_option_archive_on_fail, as: :boolean
          - if policy(@source).update_workgroup_providers?
            = d.attribute :import_option_update_workgroup_providers, as: :boolean
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = simple_block_for @source, title: t('sources.form.sections.retrieval') do |d|
          = d.attribute :retrieval_frequency, as: :enumerize
          = d.attribute :retrieval_time_of_day, as: :time_of_day
          = d.attribute :ignore_checksum, as: :boolean
          = d.attribute :next_retrieval, as: :date
      .row
        .col-lg-12
          .h3 = t('sources.form.sections.last_retrieval')
          - if @retrievals.any?
            = table_builder_2 @retrievals,
              [ \
                TableBuilderHelper::Column.new( \
                  key: :started_at, \
                  attribute: Proc.new { |n| l(n.started_at, format: :short_with_time) if n.started_at }, \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :status, \
                  attribute: Proc.new { |n| n.status.present? ? t("enumerize.operation.status.#{n.try(:status)}") : "-" } \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :duration, \
                  attribute: Proc.new { |object| object.ended_at.presence && object.started_at.presence && duration_in_words(object.ended_at - object.started_at)}, \
                  sortable: false, \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :import, \
                  attribute: Proc.new { |retrieval| retrieval.import&.name }, \
                  link_to: lambda do |retrieval| \
                    workbench_import_path( \
                      @workbench, \
                      retrieval.import \
                    ) if retrieval.import \
                  end \
                ), \
              ],
              sortable: false,
              cls: 'table'
            / = new_pagination @source.retrievals, 'pull-right'
          - else
            .row.mt-xs
              .col-lg-12
                = replacement_msg t('imports.search_no_results')
