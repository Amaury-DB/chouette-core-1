= title_tag t('routes.show.title', route: @route.name, line: @route.line.name )

.route_show
  = @map.to_html

  .summary
    p
      label = "#{@route.human_attribute_name(:name)} : "
      = @route.name

    p
      label = "#{@route.human_attribute_name(:published_name)} : "
      = @route.published_name

    p
      label = "#{@route.human_attribute_name(:number)} : "
      = @route.number

    p
      label = "#{@route.human_attribute_name(:comment)} : "
      = @route.comment

    p
      label = "#{@route.human_attribute_name(:direction_code)} : "
      - if @route.direction_code
        = t("directions.label.#{@route.direction_code}").capitalize
      - else
        = t(".undefined")

    p
      label = "#{@route.human_attribute_name(:wayback_code)} : "
      - if @route.wayback_code
        = t("waybacks.label.#{@route.wayback_code}").capitalize
      - else
        = t(".undefined")

    p
      label = "#{@route.human_attribute_name(:opposite_route)} : "
      - if @route.opposite_route
        = link_to @route.opposite_route.name, [@referential, @line, @route.opposite_route]
      - else
        = t(".no_opposite_route")

p.after_map

h3 = t('.stop_points')
#stop_points.list-group
  - @route.stop_points.each do |stop|
    .list-group-item style='display: table;width: 100%;'
      div style='display: table-cell;vertical-align: middle;'
        div style='display: inline-block;width: 9%; vertical-align: middle;'
          = "##{stop.stop_area.id}"
        div style='display: inline-block;width: 91%; vertical-align: middle;'
          = stop.stop_area.inspect

#accordion.panel-group
  .panel.panel-default
    .panel-heading
      h4.panel-title
        a data-toggle="collapse" data-parent="#accordion" href="#journey_patterns"
          = t('.journey_patterns')

    #journey_patterns.panel-collapse.collapse
      .panel-body
        .journey_patterns.paginated_content
          = paginated_content( @route.journey_patterns, "journey_patterns/journey_pattern")

- content_for :sidebar do
  ul.actions
    li = link_to t('routes.actions.new'), new_referential_line_route_path(@referential, @line), class: 'add'
    li = link_to t('routes.actions.edit'), edit_referential_line_route_path(@referential, @line, @route), class: 'edit'
    li = link_to t('routes.actions.destroy'), referential_line_route_path(@referential, @line, @route), method: :delete, :data => {:confirm =>  t('routes.actions.destroy_confirm')}, class: 'remove'

  ul.actions
    - if @route.stop_points.size >= 2
      li = link_to t('journey_patterns.actions.new'), new_referential_line_route_journey_pattern_path(@referential, @line, @route), class: 'add'
    
    - if @route.stop_points.present?
      li = link_to t('routes.actions.edit_boarding_alighting'), edit_boarding_alighting_referential_line_route_path(@referential, @line, @route), class: 'edit'
    
    - if @route.journey_patterns.size > 0
      li = link_to t('vehicle_journeys.actions.index'), [@referential, @line, @route, :vehicle_journeys], class: 'clock'

  ul.actions
    li = link_to t('vehicle_journey_imports.new.title'), new_referential_line_route_vehicle_journey_import_path( @referential, @line, @route ), class: 'import'
    li = link_to t('vehicle_journey_exports.new.title'), referential_line_route_vehicle_journey_exports_path(@referential, @line, @route, format: :zip), class: 'export'

  = creation_tag(@route)
