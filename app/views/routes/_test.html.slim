.nested-fields.stop_point
  .list-group
    = f.inputs do
      .list-group-item
        div style="display:table-cell;vertical-align:middle;width:75%;"
          - if f.object.stop_area.nil? || f.object.new_record?
            = f.input :id, as: :hidden, input_html: { class: "stop_point_id added_stop_point", value: "" }
            = f.input :position, as: :hidden, input_html: { class: "position" }
            
            = f.input :stop_area_id, label: false, as: :search_stop_area, json: referential_autocomplete_stop_areas_path(@referential, format: :json)+"?filter=physical", hint_text: t('search_hint'), no_result_text: t('no_result_text'), searching_text: t('searching_term'), tokenLimit: 1, input_html: { class: "new_stop_point stop_area_id", "data-pre": Rabl::Renderer.new('autocomplete_stop_areas/index', [f.object.stop_area].compact, view_path: 'app/views', format: :json, scope: self ).render }
            
          - else
            = f.input :id, as: :hidden, input_html: { class: 'stop_point_id' }
            = f.input :position, as: :hidden, input_html: { class: 'position' }
            
            = f.input :stop_area_id, label: false, as: :search_stop_area, json: referential_autocomplete_stop_areas_path(@referential, format: :json)+"?filter=physical", hint_text: t('search_hint'), no_result_text: t('no_result_text'), searching_text: t('searching_term'), tokenLimit: 1, input_html: { class: "stop_area_id", "data-pre": Rabl::Renderer.new('autocomplete_stop_areas/index', [f.object.stop_area].compact, view_path: 'app/views', format: :json, scope: self ).render }
          
        div.text-right style="display:table-cell;vertical-align:middle;width:25%;"
          .btn-group.btn-group-sm
            = link_to_remove_association f, class: 'btn btn-danger' do
              span.fa.fa-trash

            .btn.btn-primary data-event='handle' title="#{t('stop_points.index.move')}"
              span.fa.fa-arrows

// TEST ES6
= javascript_include_tag 'es6_browserified/test.js'
