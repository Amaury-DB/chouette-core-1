/ PageHeader
= pageheader 'map-marker',
             @line.name,
             'Lorem ipsum dolor sit amet',
             t('last_update', time: l(@line.updated_at, format: :short)) do

  / Below is secundary actions & optional contents (filters, ...)
  .row
    .col-lg-12.text-right.mb-sm
      = link_to t('lines.actions.show_network'), [@referential, @line.network], class: 'btn btn-primary'
      = link_to t('lines.actions.show_company'), [@referential, @line.company], class: 'btn btn-primary'

      = link_to @line.human_attribute_name(:footnotes), referential_line_footnotes_path(@referential, @line), class: 'btn btn-primary disabled'
      = link_to Chouette::RoutingConstraintZone.model_name.human.pluralize(:fr), referential_line_routing_constraint_zones_path(@referential, @line), class: 'btn btn-primary disabled'

      - if policy(Chouette::Line).create? && @referential.organisation == current_organisation
        = link_to t('lines.actions.new'), new_referential_line_path(@referential), class: 'btn btn-primary'
      - if policy(@line).update?
        = link_to t('lines.actions.edit'), edit_referential_line_path(@referential, @line), class: 'btn btn-primary'
      - if policy(@line).destroy?
        = link_to referential_line_path(@referential, @line), method: :delete, data: {confirm: t('lines.actions.destroy_confirm')}, class: 'btn btn-primary' do
          span.fa.fa-trash
          span = t('lines.actions.destroy')

      - if !@line.hub_restricted? || (@line.hub_restricted? && @line.routes.size < 2)
        - if policy(Chouette::Route).create? && @referential.organisation == current_organisation
          = link_to t('routes.actions.new'), new_referential_line_route_path(@referential, @line), class: 'btn btn-primary disabled'

/ PageContent
.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t('metadatas'),
          { 'ActivÃ©' => (@line.deactivated? ? t('false') : t('true')),
             @line.human_attribute_name(:network) => (@line.network.nil? ? t('lines.index.unset') : @line.network.name),
             @line.human_attribute_name(:company) => (@line.company.nil? ? t('lines.index.unset') : @line.company.name),
             @line.human_attribute_name(:number) => @line.number,
             @line.human_attribute_name(:published_name) => @line.published_name,
             @line.human_attribute_name(:registration_number) => @line.registration_number,
             @line.human_attribute_name(:transport_mode) => (@line.transport_mode ? t("enumerize.line.transport_mode.#{@line.transport_mode}") : '-'),
             @line.human_attribute_name(:transport_submode) => (@line.transport_submode ? t("enumerize.line.transport_submode.#{@line.transport_submode}") : '-'),
             @line.human_attribute_name(:url) => (@line.url ? @line.url : '-') }

    .row
      .col-lg-12
        - if @routes.any?
          = new_pagination @routes, 'pull-right'

          = table_builder @routes,
            { @routes.human_attribute_name(:name) => 'name', @routes.human_attribute_name(:published_name) => 'published_name', @routes.human_attribute_name(:wayback) => Proc.new{|r| r.try(:wayback_text)}, @routes.human_attribute_name(:opposite_route) => Proc.new{|r| r.try(:opposite_route).try(:name)} },
            [:show, :edit, :delete],
            [],
            'table'

          = new_pagination @routes, 'pull-right'

        - else
          = replacement_msg t('routes.search_no_results')
