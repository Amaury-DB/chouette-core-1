= simple_form_for [@workbench, @macro_list], html: {class: 'form-horizontal', id: 'macro_list_form'}, wrapper: :horizontal_form do |f|
  .row
    .col-lg-12
      = f.input :workbench_id, as: :hidden
      = f.input :name
      = f.input :comments, as: :text
  .row
    h2
      = t("macro.form.sections.macros")
    .separator.mb-5
    .w-full-px-5
      div[x-data]
        template[x-if="!!$store.macroList"]
          div
            = f.simple_fields_for(:macros_attributes) do |macro_form|
              template[x-for="(macro, index) in $store.macroList.macros"]
                = render 'macro_fields', f: macro_form

            .flex.flex-col.mt-5
              = simple_fields_for(:macro_select) do |macro_select_form|
                = f.label Macro::List.human_attribute_name(:type), class: 'mb-3'
                = macro_select_form.input :type, as: :tom_select, collection: @macro_list.macro_options, input_html: { 'x-model': '$store.macroList.selectedType' }, wrapper: false, label: false

              template[x-if="$store.macroList.selectedType == ''"]
                .links.nested-linker
                  = button_tag 'Add Macro', class: 'btn btn-primary', disabled: true
              - Macro.available.map do |m|
                template[x-if="$store.macroList.selectedType == '#{m.name}'"]
                  .links.nested-linker
                    = button_tag 'Add Macro', class: 'btn btn-primary', '@click.prevent': "$store.macroList.addMacro(#{ { name: m.name }.merge(options: m.options).to_json})"

  = cancel_button
  = f.button :submit, t('actions.submit'), class: 'btn btn-default formSubmitr', form: 'macro_list_form'
